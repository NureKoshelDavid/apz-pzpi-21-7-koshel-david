1 МЕТА РОБОТИ

Мета цієї роботи полягає у розробці SmartDevice або IoT частини проекту та написанні звіту з описом прийнятих інженерних рішень та програмним кодом даної частини системи. Під час виконання лабораторної роботи повинно бути створено наступні діаграми: UML діаграма взаємодії, UML діаграма прецедентів та UML діаграма пакетів. 

2 МОДЕЛЮВАННЯ ПРОГРАМНОЇ СИСТЕМИ

IoT частина розробленого проекту взаємодіє з актором працівника, коли той заходить на сторінку замовлень у додатку на телефоні. Пристрій вимірює температуру, вологість та заміряє ступінь освітлення приміщення салону краси, після чого відправляє дані на сервер, які відображаються на тій сторінці, якщо працівник авторизувався. Взаємодію зображено на діаграмі прецедентів (див. рис. 2.1).
Завдяки цієї діаграми ми окреслили функціональні вимоги до IoT частини проекту. 

3 ІНЖЕНЕРНІ РІШЕННЯ
3.1 Використані технології 

Для реалізації IoT функціональності системи використовувалася мова програмування Arduino (.ino). Програма взаємодіє з сервером через бібліотеку WiFi і використовує клієнт ThingSpeak для обміну даними. Зчитування інформації з сенсорів здійснюється за допомогою бібліотеки DHT sensor library, яка дозволяє отримувати дані з датчика температури та вологості. Після підключення до Wi-Fi мережі програма готова надсилати дані на сервер. Надсилання даних здійснюється через сервіс ThingSpeak та його бібліотеку. Передаються дані про температуру, вологість і рівень освітленості приміщення. Такий підхід дозволяє структуровано представляти дані і забезпечує зручний обмін інформацією між IoT пристроєм і сервером. Код оптимізовано для роботи на пристроях з обмеженими ресурсами, що полегшує його портування на реальні IoT пристрої. Використання сервісу ThingSpeak разом з мовою Arduino дозволяє досягти ефективної взаємодії та оптимального використання ресурсів пристрою для передачі даних на сервер. 

3.2 Архітектурні рішення

Як було зазначено вище, для написання IoT частини системи була обрана мова програмування Arduino. Компіляція коду відбувається за допомогою Wokwi емулятора. Обмін даними с сервером відбувається за допомогою бібліотеки WiFi та сервісу ThingSpeak, який приймає ці данні та при HTTP запиті з серверу до нього відправляє дані на сервер, якщо ключ API cпівпадає. Для повного розуміння використаних технологій була створена діаграма пакетів (див. рис. 3.1) 

Рисунок 3.1 - UML діаграма пакетів для IoT частини системи

Для демонстрації взаємодії пристрою з користувачем було розроблено детальну діаграму взаємодії (див. додаток Б.1). Крім того, на основі цієї взаємодії створено діаграму діяльності, яка показує взаємодію пристрою з сервером (див. додаток В.1). За допомогою цих діаграм було визначено основні технології та архітектуру системи. Всі діаграми представлені у додатках Б та В відповідно. Приклад коду для функціональної реалізації IoT частини системи наведено у додатку А.
 
4 ВИСНОВКИ

В процесі виконання лабораторної роботи була розроблена додаткова частина програмного продукту, яка функціонує як IoT складова системи. Ми підготували діаграми, які допомагають краще зрозуміти роботи цієї частини системи. Крім того, було здійснено запис демонстрації процесу тестування даної частини системи. Його можна переглянути за посиланням: (DEMO: https://youtu.be/zSprHVonGGo)
