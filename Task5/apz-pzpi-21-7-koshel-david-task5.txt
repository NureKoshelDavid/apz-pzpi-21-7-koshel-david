1 МЕТА РОБОТИ

Метою роботи є розробки мобільної частини програмної системи з використанням діаграми прецедентів, діаграми взаємодії, діаграми діяльності та діаграми компонент. У ході роботи повинна бути створена та розгорнута мобільна частина системи. Також повинна бути написана уся необхідна документація.
 
2 МОДЕЛЮВАННЯ ПРОГРАМНОЇ СИСТЕМИ

Системою користується один актор, який відповідає працівнику відповідного салону красу. За допомогою додатку користувач може зареєструвати акаунт у салоні або вже авторизуватися у системі, переглядати список усіх замовлень салону, його показники приміщення, такі як температура ,вологість та освітлення, дані показників в приміщені автоматично оновлюються раз в 10 секунд. Крім того працівник може  переглядати інформацію про існуючи замовлення, редагувати їх та скасовувати. Також він може  створювати нові замовлення, переглядати свій профіль та редагувати його інформацію.
Взаємодію системи з користувачем зобразимо нижче на діаграмі прецедентів (рис 2.1).
 
3 ІНЖЕНЕРНІ РІШЕННЯ
3.1 Структура мобільної системи

Мобільна частина була розреблена на мові програмування Kotlin. Архітектура системи базуєтьяся на клієнт-сервернаій архітектура використовуючи такий патер, як MVVC. Основний функціонал реалізується в класах Activity на мові Kotlin, де кожен Activity відповідає за функціонал окремої сторінки. Було створено Activity для головної сторінки, сторінки авторизації, реєстрації, замовлень, додавання замовлень та профіля. Розмітки для візуальної складової сторінок розміщені у папці layout в вигляді .xml файлу.
Використовувався дизайнер інтерфейсів, який розробляє користувацький інтерфейс, використовуючи технологію XML розмітки.
Програма взаємодіє з іншими компонентами системи завдяки HTTP запитам з використанням JWT, який перевіряється під час авторизації та створюється після реєстрації.
Функціональні зв'язки між користувацьким інтерфейсом та ViewModel реалізуються через біндинги (bindings) які зв’язують розмітку і Activity. Для демонстрації структури мобільної частини проєкту було створено діаграму компонентів, з яких вона складається (див. рис. 3.1), на якій продемонстровані всі компоненти цієї системи. 
Додаток починається з файлу MainActivity.kt, через який можно перейти до інших активностей. Для відображення списку замовлень був створен OrdersAdapter, який допомагає взаємодіяти з RecycleView розмітки. 
Активності SignUpActivity та LoginActivity відповідають за авторизацію та реєстрацію в системі. Вони надсилають запити на сервер для авторизації та зберігання даних авторизованого користувача.
Для отримання даних з  серверної частини використовується такий інструмент, як OkHttp.

3.2 Діяльність мобільної системи 

Для демонстрації усіх можливих дій для користувача була розроблена діаграма діяльності (див. рис. 3.2).
На цей діаграмі детально відображено дії, які доступні користувачеві та етапи, через які необхідно пройти, щоб їх здійснити.

3.3 Пакети веб-клієнту системи.

Для демонстрації каталогів системи була розроблена діаграма пакеті (див. рис. 3.3). На неї відображено усі основні пакети, які має система та їх залежність один від одного.

4 ВИСНОВКИ

В процесі виконання лабораторної роботи була розроблена мобільна частина системи. Були розроблені діаграми для кращого розуміння сценаріїв використання системи, діаграма прецедентів, діаграма активності, діаграма пакетів та діаграма компонентів системи. Також був зроблений запис, де було продемонстровано тестування системи (DEMO: https://youtu.be/2smU-gvbjxU).

