1 МЕТА РОБОТИ

Мета даної роботи полягає у створенні клієнтської частини проекту та звіту з описом інженерних рішень та посиланнями на програмний код. Під час виконання лабораторної роботи повинно бути створено наступні діаграми: UML діаграма компонентів, UML діаграма прецедентів, UML діаграму станiв та UML діаграму дiяльностi. 

2 МОДЕЛЮВАННЯ ПРОГРАМНОЇ СИСТЕМИ

Системою користуються три типи акторів: власник мережі салонів, працівники салонів та адміністратор. За допомогою веб-клієнту, користувач може створити акаунт або авторизуватися у системі, переглядати список усіх салонів мережі, переглядати або редагувати детальну інформацію, видаляти та додавати нові салоні, переглядати список працівників у обраному салоні, переглядати та редагувати інформацію про кожного працівника в салоні, та видаляти працівників. Крім того власник може редагувати власну інформацію у налаштуваннях та переглядати фінансову статистику мережі салоні. Адміністратор може переглядати список усіх користувачів системи, змінювати статус акаунту користувачів, виконувати резервне копіювання БД та експортувати дані користувачів. Для демонстрації вище означених сценаріїв була створена UML діаграма прецедентів (див. рис. 2.1).
 
3 ІНЖЕНЕРНІ РІШЕННЯ
3.1 Структура веб-клієнту системи

Клієнтська частина системи розроблена з використанням React. Сам проєкт має стандартну структуру для React-додатків. Для демонстрації структури клієнтської частини проєкту було створено діаграму компонентів, з яких вона складається (див. рис. 3.1), на якій продемонстровані всі компоненти цієї системи.
Додаток починається з файлу index.js, який підключає файл App.js, де розміщена основна логіка. У цьому файлі реалізовано маршрути, описані у файлі router\index.js. Також тут проводиться перевірка аутентифікації користувача та зберігання його ролі.
Компоненти SignIn та Registration відповідають за авторизацію та реєстрацію в системі. Вони надсилають запити на сервер для авторизації та зберігання даних авторизованого користувача, таких як id, статус авторизації та Bearer токен, для подальших запитів.
Для отримання даних з  серверної частини використовується така бібліотека, як Axios. Токен авторизації додається до кожного запиту на сервер, тому що без нього сервер не оброблятиме запит.

3.2 Діяльність веб-клієнту системи 

Для демонстрації усіх можливих дій для користувача була розроблена діаграма діяльності (див. рис. 3.2).
На ній детально відображено дії, які доступні користувачеві та етапи, через які необхідно пройти, що їх здійснити.

3.3 Пакети веб-клієнту системи.

Для демонстрації каталогів системи була розроблена діаграма пакеті (див. рис. 3.3). На неї відображено усі основні пакети, які має система та їх залежність один від одного.

3.4 Реалізація функцій повідомлень.

Система має функції повідомлень про успішне виконане резервне копіювання БД та експорт даних користувачів системи і відображає їх на веб-сторінці. У разі неуспішності виконання сторінка виводить помилку. Код для цієї функції наведений у Додатку А. 

4 ВИСНОВКИ

В процесі виконання лабораторної роботи була розроблена клієнтська частина системи. Були розроблені діаграми для кращого розуміння сценаріїв використання системи, діаграма прецедентів, діаграма активності, діаграма пакетів та діаграма компонентів системи. Також був зроблений запис, де було продемонстровано тестування системи (DEMO: https://youtu.be/7HsiE5UVaBo).	 
